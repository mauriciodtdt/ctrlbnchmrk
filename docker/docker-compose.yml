version: '2'

services:
  ctrl_odl:
    image: mauriciodtdt/odl:boron
    privileged: true
    container_name: odl
    hostname: ctrl-node
    ports:
      - "8181:8181"
    tty: true
    command: bash -c "/bin/bash"
    volumes:
      - shareVolume:/opt/  
    networks:
      ctrlbnchmrk_net:         
        ipv4_address: 10.0.1.10

  ctrl_onos:
    image: mauriciodtdt/onos
    privileged: true
    container_name: onos
    hostname: ctrl-node
    ports:
      - "8181:8181"
    tty: true
    command: bash -c "/bin/bash"
    volumes:
      - shareVolume:/opt/  
    networks:
      ctrlbnchmrk_net:         
        ipv4_address: 10.0.1.10

  ctrl_ryu:
    image: osrg/ryu
    privileged: true
    container_name: ryu
    hostname: ctrl-node
    ports:
      - "8080:8080"
    tty: true
    command: bash -c "ryu run ryu/ryu/app/gui_topology/gui_topology.py ryu/ryu/app/simple_switch_13.py --observe-links"
#    command: bash -c "ryu run ryu/ryu/app/gui_topology/gui_topology.py ryu/ryu/app/simple_switch.py"
    volumes:
      - shareVolume:/opt/  
    networks:
      ctrlbnchmrk_net:
         ipv4_address: 10.0.1.10

  ctrl_floodlight:
    image: mauriciodtdt/floodlight
    privileged: true
    container_name: floodlight
    hostname: ctrl-node
    ports:
      - "8080:8080"
    tty: true
    command: bash -c "/bin/bash"
    volumes:
      - shareVolume:/opt/  
    networks:
      ctrlbnchmrk_net:
         ipv4_address: 10.0.1.10

  ctrl_pox:
    image: mauriciodtdt/pox
    privileged: true
    container_name: pox
    hostname: ctrl-node
    #ports:
    #  - "8181:8181"
    tty: true
    command: bash -c "~/pox/pox.py forwarding.l2_learning openflow.discovery"
    volumes:
      - shareVolume:/opt/  
    networks:
      ctrlbnchmrk_net:         
         ipv4_address: 10.0.1.10

  cbench:
    image: mauriciodtdt/cbench
    privileged: true
    container_name: cbench
    hostname: cbench-node
    stdin_open: true
    tty: true
    command: bash -c "/bin/bash"
    volumes:
      - shareVolume:/opt/  
    networks:
      ctrlbnchmrk_net:
         ipv4_address: 10.0.1.30

  mininet:
    image: mauriciodtdt/mininet
    privileged: true
    container_name: mininet
    hostname: mininet-node
    stdin_open: true
    tty: true
    command: bash -c "/bin/bash"
    volumes:
      - shareVolume:/opt/  
    networks:
      ctrlbnchmrk_net:
         ipv4_address: 10.0.1.31

volumes:
  shareVolume:

networks:
  ctrlbnchmrk_net:
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 10.0.1.0/24
        gateway: 10.0.1.1
